---
import Layout from "@/layouts/Layout.astro";
import { translations } from "@/i18n/translations";
import type { Translations } from "@/i18n/types";

const pathname = Astro.url.pathname;
const referer = Astro.request.headers.get("referer");
const origin = Astro.request.headers.get("origin") || Astro.url.origin;

type Language = "pt" | "en" | "es";

// Función para detectar idioma desde el pathname
function getValidLang(pathname: string): Language {
    if (pathname.startsWith("/en/") || pathname === "/en") return "en";
    if (pathname.startsWith("/es/") || pathname === "/es") return "es";
    return "pt";
}

// Función para detectar idioma desde el referer (página anterior)
function detectLangFromReferer(
    referer: string | null,
    origin: string,
): Language {
    if (!referer || !referer.startsWith(origin)) return "pt";

    const refererPath = new URL(referer).pathname;
    return getValidLang(refererPath);
}

// Detectar idioma - prioriza el pathname actual, sino usa el referer
let lang: Language = getValidLang(pathname);
if (
    pathname === "/404" ||
    (!pathname.includes("/en/") &&
        !pathname.includes("/es/") &&
        !pathname.includes("/pt/"))
) {
    lang = detectLangFromReferer(referer, origin);
}

const t = translations[lang];
const homeURL = lang === "en" ? "/en/" : lang === "es" ? "/es/" : "/";

// Función para volver atrás con validación
const goBack = `
    if (window.history.length > 1) {
        window.history.back();
        return false;
    } else {
        window.location.href = '${homeURL}';
        return false;
    }
`;
---

<Layout title={t.notFoundTitle} description={t.notFoundDescription}>
    <section
        class="min-h-screen flex flex-col items-center justify-center bg-third text-secondary px-4 py-8 sm:py-12"
    >
        <div
            class="flex flex-col items-center w-full max-w-xl animate-float animate-infinite animate-duration-[3s] animate-ease-in-out"
        >
            <svg
                class="w-24 h-24 sm:w-32 sm:h-32 mb-6 animate-bounce-slow text-primary drop-shadow-glow"
                fill="none"
                viewBox="0 0 100 100"
            >
                <circle
                    cx="50"
                    cy="50"
                    r="48"
                    stroke="currentColor"
                    stroke-width="4"
                    fill="#f0afcd"></circle>
                <text
                    x="50"
                    y="60"
                    text-anchor="middle"
                    font-size="2.5rem"
                    font-family="Dancing Script, cursive"
                    fill="#814662">404</text
                >
            </svg>

            <h1
                class="font-bold text-3xl sm:text-5xl md:text-6xl text-primary mb-2 text-center animate-fade-in animate-delay-200"
            >
                {t.notFoundOops}
            </h1>

            <p
                class="font-light text-base sm:text-lg md:text-xl text-secondary/80 text-center w-full max-w-xl animate-fade-in animate-delay-400"
                style="white-space:pre-line"
            >
                {t.notFoundText}
            </p>

            <button
                onclick={goBack}
                class="mt-8 px-6 py-3 sm:px-8 sm:py-3 rounded-full bg-primary text-secondary font-bold text-base sm:text-lg shadow-lg hover:bg-secondary hover:text-third transition-all duration-300 animate-jelly animate-delay-700 w-full max-w-xs text-center cursor-pointer"
            >
                {t.notFoundButton}
            </button>
        </div>
    </section>
</Layout>
